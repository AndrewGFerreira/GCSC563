library(tidyverse)
# Initialize dataset (paste the path to the file in your computer)
data <- read.csv("/Users/andrew.ferreira/Dropbox (Life.Church)/Mac/Downloads/yelp_dataset/yelp_dataset dataset.csv")
library(tidytext)
library(dplyr)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(forcats)
# Initialize dataset (paste the path to the file in your computer)
data <- read.csv("/Users/andrew.ferreira/Dropbox (Life.Church)/Mac/Downloads/yelp_dataset/yelp_dataset dataset.csv")
#Select only the necessary columns
dataset <- data %>%
select(text, category)
dataset$category <- as.factor(dataset$category)
set.seed(2022)
# Getting a sample to calculate tri and bi grams
dataset_bi_sample <- sample_frac(dataset, .10)
dataset_tri_sample <- sample_frac(dataset, .10)
# preparing bigram dataset
dataset_bi_sample <-  dataset_bi_sample %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
dataset_bi_count <- dataset_bi_sample %>%
count(bigram, sort = TRUE)
# preparing trigram dataset
dataset_tri_sample <-  dataset_tri_sample %>%
unnest_tokens(trigram, text, token = "ngrams", n = 3)
dataset_tri_count <- dataset_tri_sample %>%
count(trigram, sort = TRUE)
# print results
head(dataset_bi_sample, 10)
head(dataset_bi_count, 10)
head(dataset_tri_count, 10)
head(dataset_tri_sample, 10)
set.seed(2022)
# Reducing the dataset
dataset_bi_sample_separated <- sample_frac(dataset_bi_sample, .10)
dataset_tri_sample_separated <- sample_frac(dataset_tri_sample, .10)
# separating thr words
bigram_separated <- dataset_bi_sample_separated %>%
separate(bigram, c("word1", "word2"), sep = " ")
trigram_separated <- dataset_tri_sample_separated %>%
separate(trigram, c("word1", "word2", "word3"), sep = " ")
# shows results
head(bigram_separated, 10)
head(trigram_separated, 10)
# remove stop-words
bigrams_filtered <- bigram_separated %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
trigrams_filtered <- trigram_separated %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word) %>%
filter(!word3 %in% stop_words$word)
# sort the table
bigram_counts_separated <- bigrams_filtered %>%
count(word1, word2, sort = TRUE)
trigram_counts_separated <- trigrams_filtered %>%
count(word1, word2, word3, sort = TRUE)
#show results
head(bigram_counts_separated,10)
head(trigram_counts_separated,10)
# unite words again
bigrams_united <- bigrams_filtered %>%
unite(bigram, word1, word2, sep = " ")
trigrams_united <- trigrams_filtered %>%
unite(trigram, word1, word2, word3, sep = " ")
# show results
head(bigrams_united, 10)
head(trigrams_united, 10)
# Calculate tf_idf
bigram_tf_idf <- bigrams_united %>%
count(category, bigram) %>%
bind_tf_idf(bigram, category, n) %>%
arrange(desc(tf_idf))
trigram_tf_idf <- trigrams_united %>%
count(category, trigram) %>%
bind_tf_idf(trigram, category, n) %>%
arrange(desc(tf_idf))
# Show results
head(bigram_tf_idf, 10)
head(trigram_tf_idf, 10)
library(igraph)
bigram_graph <- bigram_counts_separated %>%
filter(n > 10) %>%
graph_from_data_frame()
trigram_graph <- trigram_counts_separated %>%
filter(n > 10) %>%
graph_from_data_frame()
head(bigram_counts_separated,10)
bigram_graph
head(trigram_counts_separated,10)
trigram_graph
head(bigram_tf_idf, 10)
bigram_tf_idf
head(trigram_tf_idf, 10)
trigram_tf_idf
bigram_tf_idf_chart <- bigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf_chart
bigram_tf_idf_chart <- bigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf_chart
trigram_tf_idf_chart <- trgram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(trigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
trigram_tf_idf_chart <- trigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 10) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(trigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
trigram_tf_idf_chart
bigram_graph
trigram_graph
ggraph(trigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
library(ggraph)
ggraph(trigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
trigram_graph_nodes <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
trigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 10) %>%
graph_from_data_frame()
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
trigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 100) %>%
graph_from_data_frame()
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 80) %>%
graph_from_data_frame()
bigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 50) %>%
graph_from_data_frame()
bigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 10) %>%
graph_from_data_frame()
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 50) %>%
graph_from_data_frame()
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 80) %>%
graph_from_data_frame()
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
# represent them graphically
bigram_graph <- bigram_counts_separated %>%
filter(n > 40) %>%
graph_from_data_frame()
bigram_graph_nodes <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph_nodes
trigram_graph <- trigram_counts_separated %>%
filter(n > 10) %>%
graph_from_data_frame()
trigram_graph_nodes <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
trigram_graph_nodes
trigram_graph <- trigram_counts_separated %>%
filter(n > 5) %>%
graph_from_data_frame()
trigram_graph_nodes <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
trigram_graph_nodes
head(bigram_tf_idf, 10)
bigram_tf_idf_chart
head(trigram_tf_idf, 10)
trigram_tf_idf_chart
# Represent graphically
bigram_tf_idf_chart <- bigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 15) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf_chart
# Represent graphically
bigram_tf_idf_chart <- bigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 5) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf_chart
# Represent graphically
bigram_tf_idf_chart <- bigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 8) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(bigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
bigram_tf_idf_chart
trigram_tf_idf_chart <- trigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 8) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(trigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
trigram_tf_idf_chart
trigram_tf_idf_chart <- trigram_tf_idf %>%
group_by(category) %>%
slice_max(tf_idf, n = 5) %>%
ungroup() %>%
ggplot(aes(tf_idf, fct_reorder(trigram, tf_idf), fill = category)) +
geom_col(show.legend = FALSE) +
facet_wrap(~category, ncol = 2, scales = "free") +
labs(x = "tf-idf", y = NULL)
trigram_tf_idf_chart
# Show results
head(bigram_tf_idf, 10)
trigram_tf_idf_chart
head(trigram_tf_idf, 10)
# Show results
head(bigram_tf_idf, 10)
head(bigram_tf_idf, 10)
bigram_tf_idf_chart
head(trigram_tf_idf, 10)
trigram_tf_idf_chart
bigram_graph_direction <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
bigram_graph_direction <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
trigram_graph_direction <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
bigram_graph_direction
a <- grid::arrow(type = "closed", length = unit(.8, "inches"))
bigram_graph_direction <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
trigram_graph_direction <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
bigram_graph_direction
a <- grid::arrow(type = "closed", length = unit(.08, "inches"))
bigram_graph_direction <- ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
trigram_graph_direction <- ggraph(trigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
bigram_graph_direction
trigram_graph_direction
